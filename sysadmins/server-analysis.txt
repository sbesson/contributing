Analysis Overview
=================

For all developer tutorials and documentation, please see :doc:`/developers/index`.

OMERO supports analysis via a rich application programming interface
(API), available currently in several languages:
|OmeroJava|, |OmeroCpp|, |OmeroPy|, and |OmeroMatlab| .
These are the same APIs that both the desktop and web clients use to
access your data when stored inside OMERO.

Local analysis
--------------

If you are interested in running your analysis locally and storing the
results to the server, then your first step is to become familiar with
the developer documention.

-  The
   `OmeroClients <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroClients>`_
   provides numerous examples in each language with explanations and
   tries to be a starting point for anyone who wants to write code which
   talks to the OMERO server.
-  Most of the
   `OmeroApi <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroApi>`_
   is covered by the
   `Javadocs <http://hudson.openmicroscopy.org.uk/job/OMERO/javadoc/>`_.
-  Each of the languages has extra information on its own page:

   -  `http://trac.openmicroscopy.org.uk/omero/wiki/OmeroCpp <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroCpp>`_
   -  `http://trac.openmicroscopy.org.uk/omero/wiki/OmeroJava <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroJava>`_
   -  `http://trac.openmicroscopy.org.uk/omero/wiki/OmeroMatlab <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroMatlab>`_
   -  `http://trac.openmicroscopy.org.uk/omero/wiki/OmeroPy <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroPy>`_

-  Plus extensions we've built with these languages:

   -  `http://trac.openmicroscopy.org.uk/omero/wiki/OmeroCellProfiler <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroCellProfiler>`_

Distributed analysis via **OMERO.scripts**
------------------------------------------

Once you have your local analysis working, you can push it onto the
server for background processing. 

.. note: Your scripts must either be written in Python or be wrapped with a Python script.

The :javadoc:`OMERO scripting service API <slice2html/omero/api/IScript.html#IScript>`
allows Python scripts to be uploaded to the server and registered in the
server database. These scripts can then be called from a client with the
scripts running on the server. This allows extra functionality to be
added to an OMERO server.

Technical info and API details can be found on the `Omero
Scripts <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroPy/ScriptingServiceGuide>`_
page.

The `Scripting Service
Guide <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroPy/ScriptingServiceGuide>`_
should help you get started with the scripting service, without going
into the 'behind the scenes' details.

Scripts can be run from Insight, using a UI generated from the script.
The script results can also be handled by Insight, allowing users to
view OMERO Images or Datasets created by the script, or download files
or images.

.. figure:: /images/scripts.png
  :align: center
  :alt: Scripts in Insight

.. figure:: /images/scriptActivity.png
  :align: center
  :alt: Scripts user interface

.. figure:: /images/scriptUI.png
  :align: center
  :alt: Scripts Running and completed

Third-party analysis and **OMERO.tables**
-----------------------------------------

Support has been added for some third-party analysis data, which gets
converted in OMERO into a common format. These formats include:

-  MIAS data, measurements, and overlays
-  InCell data and measurements
-  Flex data with Acapella results
   (`screencast <http://cvs.openmicroscopy.org.uk/snapshots/movies/omero-4-1/mov/FlexPreview4.1-import.mov>`_).
   In the Flex case, additional configuration may be necessary for
   accessing both the raw data and the analysis results. See
   `FlexSupport <http://trac.openmicroscopy.org.uk/omero/wiki/FlexSupport>`_
   on the wiki for more information, or watch `the configuration
   screencast <http://cvs.openmicroscopy.org.uk/snapshots/movies/omero-4-1/mov/FlexPreview4.1-configuration.mov>`_.

The analysis results which are parsed out of the formats listed above
are converted to HDF by the `OMERO.tables
API <http://trac.openmicroscopy.org.uk/omero/wiki/OmeroTables>`_. This
facility can then be used by clients to visualize the parsed
measurements, and in the case of regions of interest, see their location
overlayed on the associated image:

.. figure:: /images/MeasurementToolSep09.png
  :align: center
  :alt: Measurement Tool

Other high-content screening (HCS) data
---------------------------------------

In addition to the Flex, Mias, and InCell 100 file formats, BD Pathway,
Olympus ScanR, and native OME-XML/TIFF files files can all be imported
as HCS data, though without support for any external analysis data which
may be attached. If you are interested in having other analysis formats
supported, contact either the `open source community </site/community>`_
or `Glencoe Software <http://www.glencoesoftware.com>`_ depending on
your needs.
