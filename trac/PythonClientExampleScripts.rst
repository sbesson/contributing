Deprecated Page

Example Python Client Scripts
=============================

Table of Contents
^^^^^^^^^^^^^^^^^

#. `General Info <#GeneralInfo>`_
#. `Scripts <#Scripts>`_

   #. `datasetThumbs.py <#datasetThumbs.py>`_
   #. `projectThumbs.py <#projectThumbs.py>`_
   #. `splitViewImage.py <#splitViewImage.py>`_
   #. `splitViewFigure.py <#splitViewFigure.py>`_

This page gives some examples of client-side Python scripts that connect
to a remote OMERO server as described on the
`PythonClientBeginners </ome/wiki/PythonClientBeginners>`_ page. These
scripts access image data to generate figures (see below). This
functionality has now been implemented as server-side scripts which can
be run from Insight (see ` demo
movie <http://cvs.openmicroscopy.org.uk/snapshots/movies/omero-4-2/mov/FigureExport.mov>`_).
However, these example scripts **may** still be useful for developers
wishing to write their own client-side Python scripts.

General Info
------------

The zipped folder
` http://cvs.openmicroscopy.org.uk/snapshots/omero/editor/python/omero-py.zip <http://cvs.openmicroscopy.org.uk/snapshots/omero/editor/python/omero-py.zip>`_
contains a number of scripts in the root folder, and also a number of
other folders with utility scripts used by the "main" scripts. List the
scripts like this...

::

    JRS-Macbookpro-19203:~ will$ cd Documents/dev/omero-py
    JRS-Macbookpro-19203:~/Documents/dev/omero-py will$ ls -al *.py
    -rw-r--r--   1 will  will  1236 Sep 30 11:28 datasetThumbs.py
    -rw-r--r--   1 will  will  2322 Sep 30 11:28 projectThumbs.py
    -rw-r--r--   1 will  will  4731 Sep 29 20:41 splitViewFigure.py
    -rw-r--r--   1 will  will  5686 Sep 29 20:41 splitViewImage.py

Scripts
-------

Below is a description of what some of the scripts do. All scripts
require you to log on to an OMERO server, so you will need the address
of the server, your username and password. The resulting images from
these scripts are saved in the omero-py/results folder. Run the scripts
like this (you will be asked for options in the command line):

::

    JRS-Macbookpro-19203:~/Documents/dev/omero-py will$ python datasetThumbs.py 

See the `PythonClientBeginners </ome/wiki/PythonClientBeginners>`_ page
for getting set-up, if you have not already done so.

datasetThumbs.py
~~~~~~~~~~~~~~~~

This script asks the user to choose a Project and then a Dataset from
this project. It then creates a montage of thumbnails for all the images
in that dataset. A title of the Dataset name is added to the figure, as
well as the date range of images in the dataset (this will be the
acquisition date unless this is not set, in which case it is the import
date).

`|Figure created by the datasetThumbs.py
script| </ome/attachment/wiki/PythonClientExampleScripts/INCENP-siRNAi.jpg>`_

projectThumbs.py
~~~~~~~~~~~~~~~~

This script performs a similar function to the datasetThumbs.py,
generating a dataset panel for each dataset in the chosen project and
creating a complete figure by merging all the panels together.

splitViewImage.py
~~~~~~~~~~~~~~~~~

This script asks the user to choose an Image (browsing via Project and
Dataset) and generates a split-view figure of that image. The images are
full-size pixels and the combined image is rendered according to current
settings in OMERO (see figures below).

Options when running the script:

-  Images will be of a maximum intensity projection from a chosen range
   of Z-planes.
-  Any channel can be chosen to be removed from the figure entirely.
-  The split channels can be coloured white, or left the same colour as
   they are currently rendered in OMERO (as below).
-  Names can be entered for each channel, or you can use the current
   channel names.

`|Figure generated by the splitViewImage.py
script| </ome/attachment/wiki/PythonClientExampleScripts/splitImage1.jpg>`_

Images generated from the splitViewImage.py script. Click to see
full-size image.

splitViewFigure.py
~~~~~~~~~~~~~~~~~~

This script compiles a number of 5\* images from the same dataset to
make a figure of split-view images. The script asks the user to choose a
Dataset, and the images are selected from that Dataset based on their
5-star rating (This must be set-up in OMERO before running the script).
Any tags that have been added to the image appear as labels on the left
of the figure.

In the example below, these 4 images were in the same dataset, with the
same rendering settings applied (Channels 2 and 3 on, 1 and 4 off). The
images had one tag each, indicating their siRNAi treatment (scrambled,
INCENP etc). Channel names were added in the script.

`|Figure created by the splitViewFigure.py
script| </ome/attachment/wiki/PythonClientExampleScripts/INCENP-siRNAiSplit.jpg>`_

Attachments
~~~~~~~~~~~

-  `splitImage1.jpg </ome/attachment/wiki/PythonClientExampleScripts/splitImage1.jpg>`_
   `|Download| </ome/raw-attachment/wiki/PythonClientExampleScripts/splitImage1.jpg>`_
   (234.9 KB) - added by *wmoore* `3
   years </ome/timeline?from=2009-10-01T20%3A09%3A48%2B01%3A00&precision=second>`_
   ago. Figure generated by the splitViewImage.py script
-  `splitImage2.jpg </ome/attachment/wiki/PythonClientExampleScripts/splitImage2.jpg>`_
   `|image5| </ome/raw-attachment/wiki/PythonClientExampleScripts/splitImage2.jpg>`_
   (344.4 KB) - added by *wmoore* `3
   years </ome/timeline?from=2009-10-01T20%3A10%3A28%2B01%3A00&precision=second>`_
   ago. Figure generated by the splitViewImage.py script
-  `INCENP-siRNAi.jpg </ome/attachment/wiki/PythonClientExampleScripts/INCENP-siRNAi.jpg>`_
   `|image6| </ome/raw-attachment/wiki/PythonClientExampleScripts/INCENP-siRNAi.jpg>`_
   (146.2 KB) - added by *wmoore* `3
   years </ome/timeline?from=2009-10-05T15%3A14%3A07%2B01%3A00&precision=second>`_
   ago. Figure created by the datasetThumbs.py script
-  `INCENP-siRNAiSplit.jpg </ome/attachment/wiki/PythonClientExampleScripts/INCENP-siRNAiSplit.jpg>`_
   `|image7| </ome/raw-attachment/wiki/PythonClientExampleScripts/INCENP-siRNAiSplit.jpg>`_
   (398.1 KB) - added by *wmoore* `3
   years </ome/timeline?from=2009-10-26T09%3A37%3A59Z&precision=second>`_
   ago. Figure created by the splitViewFigure.py script
