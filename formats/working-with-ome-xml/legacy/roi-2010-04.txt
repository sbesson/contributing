ROI 2010-04
===========




This was developed in conjunction with the September 2009 release and
updated for the April 2010 release of the OME-XML Model

ROIs are now a top level object within the OME node of our model. This
means that can be referred to from more than one point within the model.
In the case of ROI that can be used in three ways:

-  They can be referenced by an Image node.
-  They can be referenced by a MicrobeamManipulation node.
-  They can be standalone - we interpret this as meaning they are a
   template that could be applied by the user to images.

    A fourth case is possible but not recommended. It is possible for
    one ROI to be referenced by both an Image node and a
    MicrobeamManipulation node. The problem with this is the ROI for the
    MicrobeamManipulation should be fixed, but the ROI on an Image is
    something that should be editable by a user. In this case the user
    can inadvertently change the ROI set during the
    MicrobeamManipulation without realising it.

ROI attributes and simple children
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The ROI node has some basic properties attached to it:

-  An ID used to reference it from the Image and MicrobeamManipulation
   nodes.
-  A namespace used to identify the category of ROI to a specific
   application. (optional)
-  A short name for the ROI used in the user interface. (optional)
-  A longer description for the ROI used in the user interface.
   (optional)
-  An annotation reference linking an annotation to this ROI. (optional)

ROI complex children
^^^^^^^^^^^^^^^^^^^^

The ROI node has a choice of ONE child operation node. At the moment the
only choice is Union, meaning it is composed of the union of all its
child shapes. It is implemented as a choice so we have the option
available of adding other composition methods in the future. Currently
this is not planned.

Shape nodes
^^^^^^^^^^^

The shape nodes define the geometry and appearance of the ROI. Each
shape is a 2D object that exists within a single Z plane of an Image.
(This will change with a future version of the schema).

Shape attributes and simple children
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The shape node has five groups of information, four of which are
attributes or simple children.

-  General Identification

   -  A short name for the ROI used in the user interface. (optional)
   -  A longer description for the ROI used in the user interface.
      (optional)

-  Links to Planes

   -  TheZ - the z-section this Shape is on. (optional, if not specified
      then all the z-sections)
   -  TheT - the timepoint this Shape is at. (optional, if not specified
      then all the timepoints)
   -  TheC - the channel this Shape is on. (optional, if not specified
      then all the channels)

-  Display Options

   -  Fill - the colour of the fill - encoded as RGBA (optional)
   -  FillRule - which parts of the Shape to fill. (optional)
   -  Stroke - the colour of the stroke. (optional)
   -  StrokeWidth - the width of the stroke in pixels. (optional)
   -  StrokeDashArray - e.g. "none", "10 20 30 10". (optional)
   -  LineCap - the shape of the end of the line. (optional)
   -  MarkerStart - any marker applied to the start of the line, e.g. an
      arrowhead. (optional)
   -  MarkerEnd - any marker applied to the end of the line, e.g. an
      arrowhead.(optional)
   -  Label - a text label that can optionally be displayed on the
      Shape. (optional)
   -  FontFamily - the font family used to draw the text. (optional)
   -  FontSize - the size of the font in points. (optional)
   -  FontStyle - the style applied to the text. (optional)

-  Geometry Transformations

   -  Transform - a transformation matrix represented by 6 values.
      (optional)

Shape complex children
^^^^^^^^^^^^^^^^^^^^^^

The fifth part is the geometry. The Shape node has a choice of EIGHT
child geometry nodes. At the moment the choice is:

-  Line - specified by two end points
-  Rectangle - specified by an upper left corner and a width and height
-  Mask - specified by an upper left corner and a BinData block.
-  Ellipse - specified by a centre point and a radius in the x axis and
   a radius in the y axis.
-  Point - a simple x, y position.
-  Label - specified by a start point for the bast line for the first
   character and a value to display.
-  Path - this opened or closed curved sided path is specified by a
   collection of moving and drawing commands - this idea comes from SVG
-  Polyline - specified by an array of coordinates that are connected by
   straight lines and a flag saying if the line is closed.

3D ROI
^^^^^^

The current method of defining a ROI in three dimensions is as a Union
of Shape objects each of which defines the geometry where that 3D ROI
would cut the 2D Plane the Shape is attached to.

.. figure:: /images/formats/ROI/2010-04/Ome-ROI-overview-standard.png
   :align: center
   :alt: ROI Proposal 2010-04
    Polyline and Path are **DEPRECATED** as they are due to be replaced
    in the next major release to provide support for 3-dimensional
    objects.

