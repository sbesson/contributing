OME deployment tools
====================

This section describes deployment tools supported by the OME team.
It is primarily designed for the core OME developers who want to
bring new or upgrade existing prerequisites. The following steps explain
the connections between basic repositories and the testing workflow.


.. note::

    This section requires brief understanding of ansible 
    http://docs.ansible.com/ansible/intro_getting_started.html
    and Docker engine https://docs.docker.com/.

Prerequisites locations
-----------------------

List of OME prerequisites is stored in multiple git repositories, each of 
which is available from several locations.

OME Infrastructure (Experimental)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Infrastructure is provided to simplify deployment using 
`Ansible <https://www.ansible.com>`.

The Infrastructure repository is available from:

-  https://github.com/openmicroscopy/infrastructure

Roles repositories are available in:

-  https://github.com/openmicroscopy?q=ansible-role


OMERO-install
^^^^^^^^^^^^^

OMERO installation scripts are provided to help new users with installing
OMERO.server for the first time on a clean system, and can be used as
the basis for more advanced configurations.

The OMERO-install repository is available from:

-  https://github.com/ome/omero-install


Testing workflow
----------------

Testing environment is split into two tiers: developer and production
testing platform.


Devspace - Continuous Integration (Dev Testing)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Continuous integration tools managed by Jenkins CI providing
an automation framework that runs repeated jobs. The default deployment
initializes a Jenkins CI master with a predefined set of jobs.

The :doc:`Devspace <devspace>` repository is available from:

-  https://github.com/openmicroscopy/devspace

Devspace Dockerfiles uses common devslave image. The Devslave repository
is available from:

-  https://github.com/openmicroscopy/devslave-c7-docker


CI-master - Continuous Delivery (Production)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Production Continuous Delivery (CD) platform managed by
`Jenkins <http://jenkins-ci.org>`_ available on http://ci.openmicroscopy.org.
More details about CI-master available on :doc:`continuous-integration`


How to add new/upgrade/remove old prerequisites
-----------------------------------------------

When the OME platform requires a new set of prerequisites all the above
listed repositories may require updates. Depends on the nature of 
packages developers must consider:

-  infrastructure repository:

     - adding new Ansible role in its own repo or update existing one
       https://github.com/openmicroscopy?q=ansible-role
     - adding complete Ansible playbook to Infrastructure

-  adding new scripts installing appropriate package and its dependencies
   to OMERO-install or OMEROWEB-install, that includes:

     - updating Linux and Mac installation scripts
     - updating documentation autogen

- deploying Devspace to test OMERO-install scripts, that includes:

     - adding new Docker container if requires to support additional processes
     - adjusting predefined Jenkins jobs

After successful testing new prerequisites can be proposed as a permanent
adjustment to production CD.

.. note::

    Any Python module that is distributed from Linux distro packages
    must be installed from RPM file. Python modules only available
    on PyPI should be added as PIP requirement.


Pre release testing
-------------------

It is also very important to test all the dependencies before release
to make sure sysadmin instructions are fully tested. The easiest way to
test is to use Devspace.


EXAMPLE
-------

This example shows how to test and upgrading OMERO dependences.

1. open a PR against omero-install (e.g. install Pillow from RPM
   https://github.com/ome/omero-install/pull/129)
2. upgrade base docker image using your own branch
   https://github.com/openmicroscopy/devslave-c7-docker/blob/master/Dockerfile#L19
   (e.g. https://github.com/aleksandra-tarkowska/devslave-c7-docker/commit/4f95a4fd603dc84ae31c1908a4a5c3ecd786476a)
   and release container to docker hub
   (e.g. https://hub.docker.com/r/olat/devslave-c7-docker/)
3. update devspace to use newly released container (e.g.
   https://github.com/openmicroscopy/devspace/pull/63/files#diff-296e14ae0dc392c7edd9369908467953)
4. commit and push your changes to github (e.g. https://github.com/openmicroscopy/devspace/pull/63),
   set your branch in devspace ansible config and deploy


If all tests are passing, above repositories should be tagged
and tag should be propageted accordingly.


.. note::

    We are working very hard to improve and simplify that process.

