Code contributions
==================

In order to expedite the contribution of code to the OME project,
whether individual files or entire modules such as a service or web
application, we have put together the following guidelines. If you have
issues with any of the below, please let us know.

File headers
------------

The official `header templates`_ for each file type (Java, Python,
HTML, etc.)  can be found in the docs/headers.txt file of the source
repository. The correct template should be applied at the top of all
newly created files. The header of existing files should not be
modified without previous discussion except with regard to keeping the
year line up to date, for example changing "2008-2011" to "2008-2013".

Copyrights
----------

The copyright line for a newly created file is based on the
institution of the creator of the file and will remain unchanged even
if copied or moved.

Developer Certificate of Origin
-------------------------------

When submitting code to OME projects, you need to include a DCO signature,
certifying that you wrote it or otherwise have the right to pass it on as an
open-source patch (from developercertificate.org):

Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I have the
    right to submit it under the open source license indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part by me, under
    the same open source license (unless I am permitted to submit under a
    different license), as indicated in the file; or

(c) The contribution was provided directly to me by some other person who
    certified (a), (b) or (c) and I have not modified it.

(d) I understand and agree that this project and the contribution are public
    and that a record of the contribution (including all personal information
    I submit with it, including my sign-off) is maintained indefinitely and
    may be redistributed consistent with this project or the open source
    license(s) involved.


All your commit messages should include ``OME-DOC-1.1-Signed-off-by: Your_Name
<your_email@example.com> (github: your_GitHub_handle)``.

It is possible to automate this, refer to the contributing guidelines
(:file:`CONTRIBUTING.md`) for the repository you are submitting your code to.

Licenses
--------

The licenses of any files intended for redistribution with OME must be
compatible with the GPL and more restrictively for the web components
with the AGPL. Some files in the code-base (the schema, etc.) are
released under more liberal licenses but are still compatible with the
GPL.

Distribution
------------

For a block of work to be considered for redistribution with OME, the
code must further be made available in one of the following formats.

Patches/Pull requests
^^^^^^^^^^^^^^^^^^^^^

Smaller changes to the existing code base can be submitted to the team
either as patches, or preferably as pull requests on GitHub. You can
read the more about pull requests under :ref:`branch-process-label`.
The idea is that such smaller changes are reviewed line-by-line and
then maintained by the core team.

Submodules
^^^^^^^^^^

Larger submissions, which cannot be effectively reviewed so
intensively, should be submitted as `git submodules`_. Such submodules
provide a unique way to describe to a component version, which becomes
linked into the main codebase. During checkout, all submodules are
downloaded into the OME directory; and during the build process,
submodules are compiled into the official distribution.

The OME team cannot maintain or ship code which is only available as a
long-living branch (a fork) of the code base, and we would encourage
submitters to use one of the above methods.



Examples of contribution templates
----------------------------------

There are any number of other projects which have set up similar
practices for code contributions. If you would like to read more on
the rationale, please see:

* http://dojofoundation.org/about/get-involved
* http://dojofoundation.org/about/cla
* http://incubator.apache.org/
* http://www.apache.org/foundation/how-it-works.html

.. seealso::

	http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html
		Best practices for git commit message formatting
	
	http://en.wikipedia.org/wiki/Technical_debt
		Wikipedia article on Technical debt


.. _header templates: https://github.com/openmicroscopy/openmicroscopy/blob/develop/docs/headers.txt
.. _git submodules: http://git-scm.com/book/en/Git-Tools-Submodules
