OMERO Command Line Interface
============================

.. seealso::

    :doc:`/users/command-line-interface`
        User documentation on the Command Line Interface

    :doc:`/sysadmins/command-line-interface`
        System Administrator documentation for the Command Line Interface

Extensions
----------

Plugins can be written and put in the ``lib/python/omero/plugins``
directory. On execution, all plugins in that directory are registered
with the |CLI|. Alternatively, the "--path" argument can be used to point to 
other plugin files or directories.

Thread-safety
^^^^^^^^^^^^^

The ``omero.cli.CLI`` should be considered thread-*un*\ safe. A single
connection object is accessible from all plugins via
``self.ctx.conn(args)``, and it is assumed that changes to this object
will only take place in the current thread. The |CLI| instance itself,
however, can be passed between multiple threads, as long as only one
accesses it sequentially, possibly via locking.

.. seealso::
    |ExtendingOmero|
        Other extensions to OMERO

The following should be considered a design document. A portion of the
functionality is included in the milestone :milestone:`OMERO-Beta4` and later
releases, but more functionality will continually be added. If you would
like to request a particular function, please open a ticket.

Design plans
------------

General notes:

-  :command:`bin/omero` will find its installation. Therefore, to install 
   OMERO it is only necessary to unpack the bundle, and put 
   :command:`bin/omero` somewhere on your path.
-  Any command can be produced by symlinking :command:`bin/omero` to a file of
   the form "omero-command-arg1-arg2". This is useful under :file:`/etc/rc.d` 
   to have a startup script.
-  All commands respond to :command:`help`.


Executed before starting the server to detect possible issues.

:command:`admin` [4]_
    Drops user into an admin console.

:command:`admin check` [1]_ [2]_
    Performs checks on the OMERO server.
    Included are: database version, permissions on configuration (to protect passwords), minimal check of filesystems.
    
:command:`admin deploy [target1 [target2 [...]]]`
    Configures the grid according to the application descriptor and the configuration files under etc.

    Each optional target activates an optional section of the application descriptor.

    See |OmeroGrid| for more information.

:command:`admin unlock-lucene` [5]_
    At times, the Lucene full text index can become locked due to concurrent access. This removes the lock.
    
:command:`admin adduser username firstname lastname` [1]_ [4]_
    Add a user to the OMERO system.
    
:command:`admin addgroup name` [1]_ [4]_

:command:`config` [6]_
    Frontend for OmeroConfig. If Java is present, uses the prefs.java class
    to define preferences for your user. If Java is not present, a config
    file will be created in your home directory.

    Multiple "profiles" can be defined at one time. The active profile is
    chosen either by the :envvar:`OMERO_CONFIG` environment variable, or by 
    the "default" setting in your current preferences.

    The default default is default.

:command:`load [/path/to/file]`  [3]_
    Loads a file of |CLI| commands or from stdin if the path is missing.

:command:`login` [4]_
    Sets the username and password that will be used to connect to the server. Before admin activities, this can be used for "sudo" like functionality.
    
:command:`nodename [nodename] <start\|stop\|status\|restart\|>\*` [6]_
    nodename defaults to the host name as defined by "uname -n \| perl -pe 's/^(.\*)[.].\*$/$1/'" unless OMERO\_NODE is defined.

:command:`q[uit]`
:command:`search`
:command:`status`

:command:`submit [/path/to/file]` [3]_ [4]_
    Submit a file of |CLI| commands to |OmeroGrid| for execution, or from stdin if the file is missing, or drop the user into a submission shell if stdin is missing.
    
:command:`q[uit]`
:command:`h[elp]`
 
.. [1]  Requires OMERO admin access
.. [2]  Requires Postgres access
.. [3]  Reads from stdin
.. [4]  Provides a command prompt when inputs are missing.
.. [5]  Should only be executed with the server stopped.
.. [6]  Uses environment variables. See description.
